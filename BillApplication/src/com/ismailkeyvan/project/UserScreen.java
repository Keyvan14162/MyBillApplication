/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ismailkeyvan.project;

import com.ismailkeyvan.bill.BillPrinter;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Calendar;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Keyvan
 */
public final class UserScreen extends javax.swing.JFrame {
    
    
    DefaultListModel listModel = new DefaultListModel();
    
    Calendar calendar = Calendar.getInstance();

    private int realTotalPrice ;
    
    private String text = "";
    //text is gonna be written to Bill.txt

    public int getRealTotalPrice() {
        return realTotalPrice;
    }
    
    /**
     * Creates new form KullanıcıEkranı
     */
    
    public UserScreen() {
        initComponents();
        fillTable();//Fills jTable when its started
    }
    

    public void fillTable() {
        /*
        Gets informations from tablo.txt and
        adds them to jTable
        */
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        for(int i=0 ; i<model.getRowCount() ; i++) {         
            model.removeRow(i);  
        }
        
        try(Scanner scan = new Scanner (new FileReader("tablo.txt"))) {
            
            while(scan.hasNext()) {
                String text1 = scan.next();//Product
                String text2 = scan.next();//Price
                String text3 = scan.next();//Rate
   
                Object[] add = {text1 ,text2 ,text3};
                
                model.addRow(add);  
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Cannot Find tablo.txt");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonAddtoBasket = new javax.swing.JButton();
        jButtonDeleteFromBasket = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTotalPrice = new javax.swing.JTextField();
        jLabelAlert = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonFinish = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonExit = new javax.swing.JButton();
        jButtonShowBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shopping");
        setBounds(new java.awt.Rectangle(300, 150, 0, 0));
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "User Rate 10/x"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jButtonAddtoBasket.setText("Add to Basket");
        jButtonAddtoBasket.setBorder(null);
        jButtonAddtoBasket.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonAddtoBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddtoBasketActionPerformed(evt);
            }
        });

        jButtonDeleteFromBasket.setText("Remove From Basket");
        jButtonDeleteFromBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteFromBasketActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jList1);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BASKET");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Total price:");

        jTextFieldTotalPrice.setEditable(false);
        jTextFieldTotalPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalPriceActionPerformed(evt);
            }
        });

        jLabelAlert.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButtonFinish.setText("Finish the Shopping and Save the Bill");
        jButtonFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinishActionPerformed(evt);
            }
        });

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jButtonShowBill.setText("Finish the Shopping,Save and Show the Bill");
        jButtonShowBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addComponent(jLabelAlert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFinish, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDeleteFromBasket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addComponent(jButtonAddtoBasket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(10, 10, 10)
                                .addComponent(jTextFieldTotalPrice))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButtonShowBill, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAddtoBasket, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButtonDeleteFromBasket, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldTotalPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonShowBill, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButtonFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinishActionPerformed

        /*
        Writes jList items to Bill.txt
        Compares them to jTable items and if there equals(bad eng)
        gets all informations from jTable
        */

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        text = "----- YOUR SHOP NAME -----\n\n"
            + "Date : " + calendar.get(Calendar.YEAR) + "/" + calendar.get(Calendar.MONTH) + "/" + calendar.get(Calendar.DATE)
            + "\nTime: " + calendar.get(Calendar.HOUR_OF_DAY) + ":" + calendar.get(Calendar.MINUTE)+ "\n\n";
              
        if(listModel.getSize() == 0) {
            JOptionPane.showMessageDialog(this, "Basket is empty");
        }

        else {
            
            for(int i=0 ; i<listModel.getSize() ; i++) {

                String product = listModel.getElementAt(i).toString();

                for(int j=0 ; j<model.getRowCount() ; j++) {

                    if(model.getValueAt(j, 0).toString().equals(product)) {

                        String s = model.getValueAt(j, 1).toString();

                        text += "Product : "+ product +" | Price : "+ Integer.valueOf(s) +" $\n";
                        //Matches jList and jTable items and if there are same writes them to Bill.txt 
                    }
                }
            }
            text += "\n--------------------\n"
                    + "Total price : "+ realTotalPrice +" $"
                    + "\n--------------------";

            BillPrinter billPrinter = new BillPrinter(text);
            //Sends text to printer
        }
    }//GEN-LAST:event_jButtonFinishActionPerformed

    
    private void jTextFieldTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTotalPriceActionPerformed

    
    private void jButtonDeleteFromBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteFromBasketActionPerformed
        //Deletes products from basket = jList
        jLabelAlert.setText("");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        int selectedIndex = jList1.getSelectedIndex();

        if(selectedIndex == -1) {

            jLabelAlert.setForeground(Color.red);

            if(listModel.getSize() == 0)
            jLabelAlert.setText("Sorry,there is no product on your list");

            else
            jLabelAlert.setText("Please select a product to be deleted from your list");
        }

        else {

            Object delete = listModel.getElementAt(selectedIndex);

            for(int j=0 ; j<model.getRowCount() ; j++) {

                if( model.getValueAt(j, 0).toString().equals(listModel.getElementAt(selectedIndex)) ) {
                    //Decreased total price 
                    
                    realTotalPrice -= Integer.valueOf(model.getValueAt(j, 1).toString());

                    String totalPrice = String.valueOf(realTotalPrice);

                    jTextFieldTotalPrice.setText(totalPrice +" $");
                }
            }

            listModel.remove(selectedIndex);

            jLabelAlert.setForeground(Color.black);
            jLabelAlert.setText("Deleting succesful : "+ String.valueOf(delete));
        }
    }//GEN-LAST:event_jButtonDeleteFromBasketActionPerformed

    
    private void jButtonAddtoBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddtoBasketActionPerformed
        /*
        Adds selected jTable products names to jList
        Also increases total price
        */
                
        jLabelAlert.setText("");

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        jList1.setModel(listModel);

        int selectedRow = jTable1.getSelectedRow();

        if(selectedRow == -1) {

            jLabelAlert.setForeground(Color.red);

            if(jTable1.getRowCount() == 0)
            jLabelAlert.setText("Sorry,there is no product on your list");

            else
            jLabelAlert.setText("Please select a product");
        }

        else {
            listModel.addElement(model.getValueAt(selectedRow, 0));

            Object price = model.getValueAt(selectedRow, 1);
            String totalPrice = price.toString();

            realTotalPrice += Integer.valueOf(totalPrice);//useless ?

            totalPrice = String.valueOf(realTotalPrice);//dont think

            jTextFieldTotalPrice.setText(totalPrice +" $");

            jLabelAlert.setForeground(Color.black);
            jLabelAlert.setText("Adding product succesful : "+model.getValueAt(selectedRow, 0));
        }
    }//GEN-LAST:event_jButtonAddtoBasketActionPerformed

    
    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    
    private void jButtonShowBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowBillActionPerformed
        
        /* FINISH BUTTON
        Writes jList items to Bill.txt
        Compares them to jTable items and if there equals(bad eng)
        gets all informations from jTable
        */
        //Also shows the Bill.txt
        jButtonFinishActionPerformed(evt);
         
        if(!(listModel.isEmpty())) {
            
            Desktop desktop = Desktop.getDesktop();

            try {
                File file = new File("Bill.txt");

                desktop.open(file);

                } catch(IOException ex) {
                JOptionPane.showMessageDialog(this, "Error Process Terminated");
            }  
        }
    }//GEN-LAST:event_jButtonShowBillActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddtoBasket;
    private javax.swing.JButton jButtonDeleteFromBasket;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonFinish;
    private javax.swing.JButton jButtonShowBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAlert;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldTotalPrice;
    // End of variables declaration//GEN-END:variables
}
