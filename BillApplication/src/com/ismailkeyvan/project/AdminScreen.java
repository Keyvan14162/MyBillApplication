/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ismailkeyvan.project;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Keyvan
 */
public final class AdminScreen extends javax.swing.JFrame {

    UserScreen userScreen = new UserScreen();
    
    //tablo.txt saves jTable informations
    
    /**
     * Creates new form AdminScreen
     */
    public AdminScreen() {
        initComponents();
        fillTable();
        //Fill the table when it started
       
    }
    
    
    public void fillTable() {
        /*
        Gets informations from tablo.txt and
        adds them to jTable
        */
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        try(Scanner scan = new Scanner (new FileReader("tablo.txt"))) {
            
            while(scan.hasNext()) {
                String text1 = scan.next();//Product
                String text2 = scan.next();//Price
                String text3 = scan.next();//Rate
   
                Object[] add = {text1 ,text2 ,text3};
                //{product ,price ,rate}
                
                model.addRow(add);
            }
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Cannot Find tablo.txt");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldProduct = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jTextFieldRate = new javax.swing.JTextField();
        jButtonAddNewProduct = new javax.swing.JButton();
        jLabelAlert = new javax.swing.JLabel();
        jButtonRemoveProduct = new javax.swing.JButton();
        jButtonShoppingScreen = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin ");
        setBounds(new java.awt.Rectangle(300, 150, 0, 0));
        setPreferredSize(new java.awt.Dimension(800, 420));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "User Rate 10/x"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Product:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Price:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Rate:");

        jButtonAddNewProduct.setText("Add New Product");
        jButtonAddNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewProductActionPerformed(evt);
            }
        });

        jButtonRemoveProduct.setText("Remove a Product");
        jButtonRemoveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveProductActionPerformed(evt);
            }
        });

        jButtonShoppingScreen.setText("Go to Shopping Screen");
        jButtonShoppingScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShoppingScreenActionPerformed(evt);
            }
        });

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldProduct))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldRate))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldPrice)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelAlert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAddNewProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonRemoveProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonShoppingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonExit, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldRate, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonAddNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonShoppingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(jLabelAlert, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        /*
        Gets information from clicked table row and 
        Adds them to the text fields
        */

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        int selectedRow = jTable1.getSelectedRow();
        
        jTextFieldProduct.setText(model.getValueAt(selectedRow, 0).toString());
        jTextFieldPrice.setText(model.getValueAt(selectedRow, 1).toString());
        jTextFieldRate.setText(model.getValueAt(selectedRow, 2).toString());
        
    }//GEN-LAST:event_jTable1MouseClicked

    
    private void jButtonAddNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewProductActionPerformed
        //This one is long   
        
        try{
        
            jLabelAlert.setText("");

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            LinkedList<String> list = new LinkedList<>();
            /*
            List is saving all entered product names and if product name
            is equals to new product name that gonna be added 
            terminates the process
            */

            int selectedRow = jTable1.getSelectedRow();
            
            int intRate = Integer.valueOf(jTextFieldRate.getText());
            int intPrice = Integer.valueOf(jTextFieldPrice.getText());
            /*
            For NumberFormatException control
            If values isnt integer throws an exception
            */
               
            for(int i=0 ; i<model.getRowCount() ; i++) {
                //Saving all entered product names
                list.add(model.getValueAt(i, 0).toString());
            }

            if(jTextFieldProduct.getText().trim().equals("") ||
                    jTextFieldPrice.getText().trim().equals("") ||
                    jTextFieldRate.getText().trim().equals("")) {

                jLabelAlert.setForeground(Color.red);
                jLabelAlert.setText("Fill the all fields");
                //If a text field is empty gives a warning 
            }

            else if(list.contains(jTextFieldProduct.getText())) {
                /*
                We did saved all product names in this list
                If list contains new entered product
                gives a warning
                */
                jLabelAlert.setForeground(Color.red);
                jLabelAlert.setText("Cannot add same products");
            }
            
            else if(intRate < 0 || intRate >10) {
                //Encapsulates user rate
                jLabelAlert.setForeground(Color.red);
                jLabelAlert.setText("Rate Can't be Higher Than 10 and Lower Than 0");

            }
            
            else if(intPrice <= 0) {
                //Encapsulates price
                jLabelAlert.setForeground(Color.red);
                jLabelAlert.setText("Price Can't be Lower Than 1");
            }


            else {
                /*
                Adds informations to tablo.txt file and jTable
                */
                
                //For remove space characters thats makes app go crazy
                String product = jTextFieldProduct.getText().trim();
                String[] array = product.split(" ");
                product = "";
                for (String array1 : array) {
                    product += array1;
                }
                
                String price = jTextFieldPrice.getText().trim();
                String rate = jTextFieldRate.getText().trim();

                try(FileWriter fileWriter = new FileWriter("tablo.txt" ,true)) {

                    fileWriter.write("\n"+ product +" "+ price +" "+ rate);

                    Object[] addObb = {product ,price ,rate};

                    model.addRow(addObb);

                    jTextFieldProduct.setText("");
                    jTextFieldPrice.setText("");               
                    jTextFieldRate.setText("");

                    jLabelAlert.setForeground(Color.black);
                    jLabelAlert.setText("Product Addition Successful");


                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "IO Error Process Terminated");       
               }  
            }
              
        } catch (NumberFormatException ex) {
            /*
            Controls price and user rate
            and makes sure it is integer
            */
            jLabelAlert.setForeground(Color.red);
            jLabelAlert.setText("Price and User Rate Must be an Integer Value");
        }
    }//GEN-LAST:event_jButtonAddNewProductActionPerformed

    
    private void jButtonRemoveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveProductActionPerformed

        /*
        Deletes selected row from the jTable and tablo.txt
        */
        
        jLabelAlert.setText("");
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        int selectedRow = jTable1.getSelectedRow();
        
        if(selectedRow == -1) {
            
            if(model.getRowCount() == 0) {
                jLabelAlert.setForeground(Color.red);
                jLabelAlert.setText("Table is Empty");
            }
            
            else {
                jLabelAlert.setForeground(Color.red);
                jLabelAlert.setText("Please select a product for remove");
            }
  
        }
        
        else {
            //My goal is in here;
            //Deleting selected product from the tablo.txt file
            
            /*
            This is deletes selected row from jTable
            After than deletes tablo.txt and refills it
            with informations from jTable
            */
            
            File file = new File("tablo.txt");
            
            try(Scanner scan = new Scanner(new FileReader(file))) {
   
            String line = "";   
            
                while(scan.hasNext()) {
                   
                    line = scan.next();
                   
                    if(line.equals(model.getValueAt(selectedRow, 0))) {
                       
                        model.removeRow(selectedRow);
                        //Deleted selected row from jTable

                        file.delete();
                        //Deleted tablo.txt
                       
                        try(FileWriter writer = new FileWriter("tablo.txt" ,false)) {
                            //Rewretes tablo.txt and gets informations from jTable
                           
                            for(int i=0 ; i<model.getRowCount()+1 ; i++) {
                                      
                                writer.write(model.getValueAt(i, 0) +" "+ model.getValueAt(i, 1) +" "
                                    + model.getValueAt(i, 2) +" \n");
                            }
                           
                            fillTable();
                            //Idk do i need to use this
                            //But i wrote one time 
                            
                            jLabelAlert.setForeground(Color.black);
                            jLabelAlert.setText("Product successfully deleted");
                           
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(this, "Cannot find tablo.txt");
                        }          
                    }//if         
                }//while
               
            } catch (FileNotFoundException ex) { 
                JOptionPane.showMessageDialog(this, "Cannot find tablo.txt");       
            } catch (IndexOutOfBoundsException ex) {
            //It gives this exception everytime when youclick the remove button but still deletes selected line from the 
            //tablo.txt and jtable.So it works xd
            jLabelAlert.setForeground(Color.black);
            jLabelAlert.setText("Product successfully deleted");
            }
        }    
    }//GEN-LAST:event_jButtonRemoveProductActionPerformed

    
    private void jButtonShoppingScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShoppingScreenActionPerformed
        //Goes the UserScreen
        this.setVisible(false);
        
        userScreen = new UserScreen();
        //This is like refreshing the page
        //In this way jTable inside User Screen,will be shown up with changes
        userScreen.setVisible(true);
    }//GEN-LAST:event_jButtonShoppingScreenActionPerformed

    
    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddNewProduct;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonRemoveProduct;
    private javax.swing.JButton jButtonShoppingScreen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAlert;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldProduct;
    private javax.swing.JTextField jTextFieldRate;
    // End of variables declaration//GEN-END:variables
}
